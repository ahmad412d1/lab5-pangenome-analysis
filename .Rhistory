dplyr::summarize(count = n())
mean_genome = mean(value,na.rm=TRUE),
sd_genome = sd(value, na.rm=TRUE),
)
View(stats_core_pan)
View(stats_core_pan)
#calculate mean, SD, SE and 95% CI per timepoint for each group
stats_core_pan <- df %>%
group_by(genomes, series ) %>%
dplyr::summarize(count = n())
mean_genome = mean(value,na.rm=TRUE),
sd_genome = sd(value, na.rm=TRUE),
)
View(stats_core_pan)
View(statsBG)
mean_genome = mean(value,na.rm=TRUE),
sd_genome = sd(value, na.rm=TRUE),
se_genome = sd_genomes/sqrt(count),
)
#calculate mean, SD, SE and 95% CI per timepoint for each group
stats_core_pan <- df %>%
group_by(genomes, series ) %>%
dplyr::summarize(count = n())
mean_genome = mean(value,na.rm=TRUE),
sd_genome = sd(value, na.rm=TRUE),
se_genome = sd_genomes/sqrt(count),
)
View(stats_core_pan)
View(stats_core_pan)
df <- melt(df_core_pan ,  id.vars = 'genomes', variable.name = 'series')
View(df)
#calculate mean, SD, SE and 95% CI per timepoint for each group
stats_core_pan <- df %>%
group_by(genomes, series ) %>%
dplyr::summarize(count = n())
mean_genome = mean(value,na.rm=TRUE),
sd_genome = sd(value, na.rm=TRUE),
se_genome = sd_genomes/sqrt(count),
)
View(stats_core_pan)
#calculate mean, SD, SE and 95% CI per timepoint for each group
stats_core_pan <- df %>%
group_by(genomes, series ) %>%
dplyr::summarize(count = n()),
mean_genome = mean(value,na.rm=TRUE),
sd_genome = sd(value, na.rm=TRUE),
se_genome = sd_genomes/sqrt(count),
)
df <- melt(df_core_pan ,  id.vars = 'genomes', variable.name = 'series')
#calculate mean, SD, SE and 95% CI per timepoint for each group
stats_core_pan <- df %>%
group_by(genomes, series ) %>%
dplyr::summarize(count = n()),
mean_genome = mean(value,na.rm=TRUE),
sd_genome = sd(value, na.rm=TRUE),
se_genome = sd_genomes/sqrt(count),
)
View(stats_core_pan)
#calculate mean, SD, SE and 95% CI per timepoint for each group
stats_core_pan <- df %>%
group_by(genomes, series ) %>%
dplyr::summarize(count = n(),
mean_genome = mean(value,na.rm=TRUE),
sd_genome = sd(value, na.rm=TRUE),
se_genome = sd_genomes/sqrt(count),
)
View(stats_core_pan)
View(stats_core_pan)
#calculate mean, SD, SE and 95% CI per timepoint for each group
stats_core_pan <- df %>%
group_by(genomes, series ) %>%
dplyr::summarize(count = n(),
mean_genome = mean(value,na.rm=TRUE),
sd_genome = sd(value, na.rm=TRUE),
se_genome = sd_genomes/sqrt(count),
)
#calculate mean, SD, SE and 95% CI per timepoint for each group
stats_core_pan <- df %>%
group_by(genomes, series) %>%
dplyr::summarize(count = n()),
mean_genome = mean(value,na.rm=TRUE),
sd_genome = sd(value, na.rm=TRUE),
se_genome = sd_genomes/sqrt(count),
)
#calculate mean, SD, SE and 95% CI per timepoint for each group
stats_core_pan <- df %>%
group_by(genomes, series) %>%
dplyr::summarize(count = n())+
mean_genome = mean(value,na.rm=TRUE),
sd_genome = sd(value, na.rm=TRUE),
se_genome = sd_genomes/sqrt(count),
)
#calculate mean, SD, SE and 95% CI per timepoint for each group
stats_core_pan <- df %>%
group_by(genomes, series) %>%
dplyr::summarize(count = n())
library(ggplot2)
library(dplyr)
library(rstatix)
library(plotly)
library(reshape2)
library(tidyverse)
#import datasets
df_core <- read.csv("../Number_of_Conserved_Genes.csv", header = TRUE)
df_pan <- read.csv("../Number_of_Genes_in_Pan_Geneome.csv", header = TRUE)
df_core_pan <- read.csv("../Number_of_Genes_in_Core and Pan_Geneome.csv", header = TRUE)
df <- melt(df_core_pan ,  id.vars = 'genomes', variable.name = 'series')
#calculate mean, SD, SE and 95% CI per timepoint for each group
stats_core_pan <- df %>%
group_by(genomes, series) %>%
dplyr::summarize(count = n())
mean_genome = mean(value,na.rm=TRUE),
sd_genome = sd(value, na.rm=TRUE),
se_genome = sd_genomes/sqrt(count),
)
#calculate mean, SD, SE and 95% CI per timepoint for each group
stats_core_pan <- df %>%
group_by(groupid,timedays) %>%
summarise(
count = n(),
mean_genome = mean(value,na.rm=TRUE),
sd_genome = sd(value, na.rm=TRUE),
se_genome = sd_genomes/sqrt(count),
)
#calculate mean, SD, SE and 95% CI per timepoint for each group
stats_core_pan <- df %>%
group_by(genomes,values) %>%
summarise(
count = n(),
mean_genome = mean(value,na.rm=TRUE),
sd_genome = sd(value, na.rm=TRUE),
se_genome = sd_genomes/sqrt(count),
)
library(ggplot2)
library(dplyr)
library(rstatix)
library(plotly)
library(reshape2)
library(tidyverse)
#import datasets
df_core <- read.csv("../Number_of_Conserved_Genes.csv", header = TRUE)
df_pan <- read.csv("../Number_of_Genes_in_Pan_Geneome.csv", header = TRUE)
df_core_pan <- read.csv("../Number_of_Genes_in_Core and Pan_Geneome.csv", header = TRUE)
df <- melt(df_core_pan ,  id.vars = 'genomes', variable.name = 'series')
#calculate mean, SD, SE and 95% CI per timepoint for each group
stats_core_pan <- df %>%
group_by(genomes, series) %>%
summarise(
count = n(),
mean_genome = mean(value,na.rm=TRUE),
sd_genome = sd(value, na.rm=TRUE),
se_genome = sd_genomes/sqrt(count),
)
library(dplyr)
library(ggplot2)
library(dplyr)
library(plotly)
library(reshape2)
library(tidyverse)
df <- melt(df_core_pan ,  id.vars = 'genomes', variable.name = 'series')
View(df)
View(df)
#calculate mean, SD, SE and 95% CI per timepoint for each group
stats_core_pan <- df %>%
group_by(genomes, series) %>%
summarise(
count = n(),
mean_genome = mean(value,na.rm=TRUE),
sd_genome = sd(value, na.rm=TRUE),
se_genome = sd_genomes/sqrt(count),
)
#calculate mean, SD, SE and 95% CI per timepoint for each group
options(dplyr.summarise.inform = FALSE)
stats_core_pan <- df %>%
group_by(genomes, series) %>%
dplyr::summarize(count = n()),
mean_genome = mean(value,na.rm=TRUE),
sd_genome = sd(value, na.rm=TRUE),
se_genome = sd_genomes/sqrt(count),
)
stats_core_pan <- df %>%
group_by(genomes, series) %>%
dplyr::summarize(count = n())
mean_genome = mean(value,na.rm=TRUE),
sd_genome = sd(value, na.rm=TRUE),
se_genome = sd_genomes/sqrt(count),
)
#calculate mean, SD, SE and 95% CI per timepoint for each group
options(dplyr.summarise.inform = FALSE)
stats_core_pan <- df %>%
group_by(genomes, series) %>%
dplyr::summarize(count = n()),
mean_genome = mean(value,na.rm=TRUE),
sd_genome = sd(value, na.rm=TRUE),
se_genome = sd_genomes/sqrt(count),
)
stats_core_pan <- df %>%
group_by(genomes, series) %>%
dplyr::summarize(count = n()),
mean_genome = mean(value,na.rm=TRUE),
sd_genome = sd(value, na.rm=TRUE),
se_genome = sd_genomes/sqrt(count),
)
df <- melt(df_core_pan, id.vars = 'genomes', variable.name = 'series')
#calculate mean, SD, SE and 95% CI per timepoint for each group
options(dplyr.summarise.inform = FALSE)
stats_core_pan <- df %>%
group_by(genomes, series) %>%
dplyr::summarize(count = n()),
mean_genome = mean(value,na.rm=TRUE),
sd_genome = sd(value, na.rm=TRUE),
se_genome = sd_genomes/sqrt(count),
)
stats_core_pan <- df %>%
group_by(genomes, series) %>%
dplyr::summarize(count = n())
View(stats_core_pan)
stats_core_pan <- df %>%
group_by(genomes, series) %>%
mean_genome = mean(value,na.rm=TRUE),
sd_genome = sd(value, na.rm=TRUE),
se_genome = sd_genomes/sqrt(count),
)
stats_core_pan <- df %>%
group_by(genomes, series) %>%
summarise(mean_genome = mean(value,na.rm=TRUE),
sd_genome = sd(value, na.rm=TRUE),
se_genome = sd_genomes/sqrt(count),
)
stats_core_pan <- df %>%
group_by(genomes, series) %>%
summarise(
mean_genome = mean(value,na.rm=TRUE),
sd_genome = sd(value, na.rm=TRUE),
se_genome = sd_genomes/sqrt(count),
)
stats_core_pan2 <- df %>%
group_by(genomes, series) %>%
summarise(
mean_genome = mean(value,na.rm=TRUE),
sd_genome = sd(value, na.rm=TRUE),
se_genome = sd_genome/sqrt(count),
)
stats_core_pan2 <- df %>%
group_by(genomes, series) %>%
summarise(
mean_genome = mean(value,na.rm=TRUE),
sd_genome = sd(value, na.rm=TRUE),
se_genome = sd_genome/stats_core_pan$count,
)
stats_core_pan$count
stats_core_pan$count
stats_core_pan2 <- df %>%
group_by(genomes, series) %>%
summarise(
mean_genome = mean(value,na.rm=TRUE),
sd_genome = sd(value, na.rm=TRUE),
se_genome = sd_genome/stats_core_pan$count,
)
View(fig1)
stats_core_pan2 <- df %>%
group_by(genomes, series) %>%
summarise(
mean_genome = mean(value,na.rm=TRUE),
sd_genome = sd(value, na.rm=TRUE),
)
stats_core_pan <- df %>%
group_by(genomes, series) %>%
dplyr::summarize(count = n())
library(dplyr)
#import datasets
df_core <- read.csv("../Number_of_Conserved_Genes.csv", header = TRUE)
df_pan <- read.csv("../Number_of_Genes_in_Pan_Geneome.csv", header = TRUE)
df_core_pan <- read.csv("../Number_of_Genes_in_Core and Pan_Geneome.csv", header = TRUE)
df <- melt(df_core_pan, id.vars = 'genomes', variable.name = 'series')
#calculate mean, SD, SE and 95% CI per timepoint for each group
options(dplyr.summarise.inform = FALSE)
stats_core_pan <- df %>%
group_by(genomes, series) %>%
dplyr::summarize(count = n())
library(dplyr)
#import datasets
df_core <- read.csv("../Number_of_Conserved_Genes.csv", header = TRUE)
df_pan <- read.csv("../Number_of_Genes_in_Pan_Geneome.csv", header = TRUE)
df_core_pan <- read.csv("../Number_of_Genes_in_Core and Pan_Geneome.csv", header = TRUE)
df <- melt(df_core_pan, id.vars = 'genomes', variable.name = 'series')
#calculate mean, SD, SE and 95% CI per timepoint for each group
options(dplyr.summarise.inform = FALSE)
stats_core_pan <- df %>%
group_by(genomes, series) %>%
dplyr::summarize(count = n())
count = n(),
stats_core_pan <- df %>%
group_by(genomes, series) %>%
summarise(
count = n(),
)
stats_core_pan <- df %>%
group_by(genomes, series) %>%
summarise(
count = n(),
mean_genome = mean(value,na.rm=TRUE),
)
View(stats_core_pan)
stats_core_pan <- df %>%
group_by(genomes, series) %>%
summarise(
count = n(),
mean_genome = mean(value,na.rm=TRUE),
sd_genomes = sd(value, na.rm=TRUE),
)
View(stats_core_pan)
stats_core_pan <- df %>%
group_by(genomes, series) %>%
summarise(
count = n(),
mean_genome = mean(value,na.rm=TRUE),
sd_genomes = sd(value, na.rm=TRUE),
seBG = sdBG/sqrt(count),
)
stats_core_pan <- df %>%
group_by(genomes, series) %>%
summarise(
count = n(),
mean_genome = mean(value,na.rm=TRUE),
sd_genome = sd(value, na.rm=TRUE),
se_genome = sd_genomes/sqrt(count),
)
stats_core_pan <- df %>%
group_by(genomes, series) %>%
summarise(
count = n(),
mean_genome = mean(value,na.rm=TRUE),
sd_genome = sd(value, na.rm=TRUE),
se_genome = sd_genome/sqrt(count),
)
View(stats_core_pan)
stats_core_pan <- df %>%
group_by(genomes, series) %>%
summarise(
count = n(),
mean_genome = mean(value,na.rm=TRUE),
sd_genome = sd(value, na.rm=TRUE),
se_genome = sd_genome/sqrt(count),
ci95lower = meanBG - seBG*1.96,
ci95upper = meanBG + seBG*1.96
)
stats_core_pan <- df %>%
group_by(genomes, series) %>%
summarise(
count = n(),
mean_genome = mean(value,na.rm=TRUE),
sd_genome = sd(value, na.rm=TRUE),
se_genome = sd_genome/sqrt(count),
ci95lower = mean_genome - se_genome*1.96,
ci95upper = mean_genome + se_genome*1.96
)
View(stats_core_pan)
View(stats_core_pan)
mp
#mean profiles in the same graphs
mp <- ggplot(stats_core_pan, aes(x=genomes, y=mean_genome, color=genomes, shape=genomes)) +
geom_line() +
geom_point(size = 2.5) +
labs(color="genomes", x="number of genomes", y = "number of genes") +
scale_x_continuous(breaks=seq(1,10,1), limits = c(0.5,10.5)) +
ylim(120, 200) +
scale_color_manual(values = c("#55acee", "#bb4444")) +
scale_shape_manual(values=c(15,16)) +
guides(shape=FALSE) +
theme_bw()
library(ggplot2)
#mean profiles in the same graphs
mp <- ggplot(stats_core_pan, aes(x=genomes, y=mean_genome, color=genomes, shape=genomes)) +
geom_line() +
geom_point(size = 2.5) +
labs(color="genomes", x="number of genomes", y = "number of genes") +
scale_x_continuous(breaks=seq(1,10,1), limits = c(0.5,10.5)) +
ylim(120, 200) +
scale_color_manual(values = c("#55acee", "#bb4444")) +
scale_shape_manual(values=c(15,16)) +
guides(shape=FALSE) +
theme_bw()
mp
#mean profiles in the same graphs
mp <- ggplot(stats_core_pan, aes(x=genomes, y=mean_genome, color=genomes, shape=genomes)) +
geom_line() +
geom_point(size = 2.5) +
labs(color="genomes", x="number of genomes", y = "number of genes") +
scale_x_continuous(breaks=seq(1,10,1), limits = c(0.5,10.5)) +
ylim(120, 200) +
scale_color_manual(values = c("#55acee", "#bb4444")) +
scale_shape_manual(values=c(15,16)) +
guides(shape=none) +
theme_bw()
#mean profiles in the same graphs
mp <- ggplot(stats_core_pan, aes(x=genomes, y=mean_genome, color=genomes, shape=genomes)) +
geom_line() +
geom_point(size = 2.5) +
labs(color="genomes", x="number of genomes", y = "number of genes") +
scale_x_continuous(breaks=seq(1,10,1), limits = c(0.5,10.5)) +
ylim(120, 200) +
scale_color_manual(values = c("#55acee", "#bb4444")) +
scale_shape_manual(values=c(15,16)) +
guides(shape='none') +
theme_bw()
mp
#mean profiles in the same graphs
mp <- ggplot(stats_core_pan, aes(x=genomes, y=mean_genome, color=genomes, shape=genomes)) +
geom_line()
mp
#mean profiles in the same graphs
mp <- ggplot(stats_core_pan, aes(x=genomes, y=mean_genome, color=genomes, shape=series)) +
geom_line()
mp
#mean profiles in the same graphs
mp <- ggplot(stats_core_pan, aes(x=genomes, y=mean_genome, color=genomes, shape=series)) +
geom_line() +
geom_point(size = 2.5)
mp
#mean profiles in the same graphs
mp <- ggplot(stats_core_pan, aes(x=genomes, y=mean_genome, color=genomes, shape=series)) +
geom_line() +
geom_point(size = 2.5) +
labs(color="genomes", x="number of genomes", y = "number of genes")
mp
#mean profiles in the same graphs
mp <- ggplot(stats_core_pan, aes(x=genomes, y=mean_genome, color=genomes, shape=series)) +
geom_line() +
geom_point(size = 2.5) +
labs(color="genomes", x="number of genomes", y = "number of genes") +
scale_x_continuous(breaks=seq(1,10,1), limits = c(0.5,10.5))
mp
#mean profiles in the same graphs
mp <- ggplot(stats_core_pan, aes(x=genomes, y=mean_genome, color=genomes, shape=series)) +
geom_line() +
geom_point(size = 2.5) +
labs(color="genomes", x="number of genomes", y = "number of genes") +
scale_x_continuous(breaks=seq(1,10,1), limits = c(0.5,5))
mp
#mean profiles in the same graphs
mp <- ggplot(stats_core_pan, aes(x=genomes, y=mean_genome, color=genomes, shape=series)) +
geom_line() +
geom_point(size = 2.5) +
labs(color="genomes", x="number of genomes", y = "number of genes") +
scale_x_continuous(breaks=seq(1,10,1), limits = c(1,5))
mp
#mean profiles in the same graphs
mp <- ggplot(stats_core_pan, aes(x=genomes, y=mean_genome, color=genomes, shape=series)) +
geom_line() +
geom_point(size = 2.5) +
labs(color="genomes", x="number of genomes", y = "number of genes") +
scale_x_continuous(breaks=seq(1,10,1), limits = c(1,5)) +
ylim(120, 200)
mp
#mean profiles in the same graphs
mp <- ggplot(stats_core_pan, aes(x=genomes, y=mean_genome, color=genomes, shape=series)) +
geom_line() +
geom_point(size = 2.5) +
labs(color="genomes", x="number of genomes", y = "number of genes") +
scale_x_continuous(breaks=seq(1,10,1), limits = c(1,5)) +
scale_color_manual(values = c("#55acee", "#bb4444"))
mp
#mean profiles in the same graphs
mp <- ggplot(stats_core_pan, aes(x=genomes, y=mean_genome, color=genomes, shape=series)) +
geom_line() +
geom_point(size = 2.5) +
labs(color="genomes", x="number of genomes", y = "number of genes") +
scale_x_continuous(breaks=seq(1,10,1), limits = c(1,5)) +
scale_color_manual(values = c("#55acee", "#bb4444"))
mp
#mean profiles in the same graphs
mp <- ggplot(stats_core_pan, aes(x=genomes, y=mean_genome, color=genomes, shape=series)) +
geom_line() +
geom_point(size = 2.5) +
labs(color="genomes", x="number of genomes", y = "number of genes") +
scale_x_continuous(breaks=seq(1,10,1), limits = c(1,5))
mp
#mean profiles in the same graphs
mp <- ggplot(stats_core_pan, aes(x=genomes, y=mean_genome, color=genomes, shape=series)) +
geom_line() +
geom_point(size = 2.5) +
labs(color="genomes", x="number of genomes", y = "number of genes") +
scale_x_continuous(breaks=seq(1,10,1), limits = c(1,5)) +
scale_shape_manual(values=c(15,16))
mp
#mean profiles in the same graphs
mp <- ggplot(stats_core_pan, aes(x=genomes, y=mean_genome, color=genomes, shape=series)) +
geom_line() +
geom_point(size = 2.5) +
labs(color="genomes", x="number of genomes", y = "number of genes") +
scale_x_continuous(breaks=seq(1,10,1), limits = c(1,5)) +
scale_shape_manual(values=c(15,16)) +
guides(shape='none') +
theme_bw()
mp
#Adding errorbars (95% confidence interval) to the mean profile
mp + geom_errorbar(aes(ymin = ci95lower, ymax = ci95upper), width = 0.5)
#mean profiles in the same graphs
mp <- ggplot(stats_core_pan, aes(x=genomes, y=mean_genome, color=series, shape=series)) +
geom_line() +
geom_point(size = 2.5) +
labs(color="genomes", x="number of genomes", y = "number of genes") +
scale_x_continuous(breaks=seq(1,10,1), limits = c(1,5)) +
scale_shape_manual(values=c(15,16)) +
guides(shape='none') +
theme_bw()
mp
#Adding errorbars (95% confidence interval) to the mean profile
mp + geom_errorbar(aes(ymin = ci95lower, ymax = ci95upper), width = 0.5)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
